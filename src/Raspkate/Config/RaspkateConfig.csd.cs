//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Raspkate.Config
{
    
    
    /// <summary>
    /// The RaspkateConfiguration Configuration Section.
    /// </summary>
    public partial class RaspkateConfiguration : global::System.Configuration.ConfigurationSection
    {
        
        #region Singleton Instance
        /// <summary>
        /// The XML name of the RaspkateConfiguration Configuration Section.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string RaspkateConfigurationSectionName = "raspkateConfiguration";
        
        /// <summary>
        /// The XML path of the RaspkateConfiguration Configuration Section.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string RaspkateConfigurationSectionPath = "raspkateConfiguration";
        
        /// <summary>
        /// Gets the RaspkateConfiguration instance.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public static global::Raspkate.Config.RaspkateConfiguration Instance
        {
            get
            {
                return ((global::Raspkate.Config.RaspkateConfiguration)(global::System.Configuration.ConfigurationManager.GetSection(global::Raspkate.Config.RaspkateConfiguration.RaspkateConfigurationSectionPath)));
            }
        }
        #endregion
        
        #region Xmlns Property
        /// <summary>
        /// The XML name of the <see cref="Xmlns"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string XmlnsPropertyName = "xmlns";
        
        /// <summary>
        /// Gets the XML namespace of this Configuration Section.
        /// </summary>
        /// <remarks>
        /// This property makes sure that if the configuration file contains the XML namespace,
        /// the parser doesn't throw an exception because it encounters the unknown "xmlns" attribute.
        /// </remarks>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Raspkate.Config.RaspkateConfiguration.XmlnsPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public string Xmlns
        {
            get
            {
                return ((string)(base[global::Raspkate.Config.RaspkateConfiguration.XmlnsPropertyName]));
            }
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Prefix Property
        /// <summary>
        /// The XML name of the <see cref="Prefix"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string PrefixPropertyName = "prefix";
        
        /// <summary>
        /// Gets or sets the Prefix.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The Prefix.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Raspkate.Config.RaspkateConfiguration.PrefixPropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public virtual string Prefix
        {
            get
            {
                return ((string)(base[global::Raspkate.Config.RaspkateConfiguration.PrefixPropertyName]));
            }
            set
            {
                base[global::Raspkate.Config.RaspkateConfiguration.PrefixPropertyName] = value;
            }
        }
        #endregion
        
        #region Modules Property
        /// <summary>
        /// The XML name of the <see cref="Modules"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string ModulesPropertyName = "modules";
        
        /// <summary>
        /// Gets or sets the Modules.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The Modules.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Raspkate.Config.RaspkateConfiguration.ModulesPropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public virtual global::Raspkate.Config.ModuleElementCollection Modules
        {
            get
            {
                return ((global::Raspkate.Config.ModuleElementCollection)(base[global::Raspkate.Config.RaspkateConfiguration.ModulesPropertyName]));
            }
            set
            {
                base[global::Raspkate.Config.RaspkateConfiguration.ModulesPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace Raspkate.Config
{
    
    
    /// <summary>
    /// The ModuleElement Configuration Element.
    /// </summary>
    public partial class ModuleElement : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Path Property
        /// <summary>
        /// The XML name of the <see cref="Path"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string PathPropertyName = "path";
        
        /// <summary>
        /// Gets or sets the Path.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The Path.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Raspkate.Config.ModuleElement.PathPropertyName, IsRequired=true, IsKey=true, IsDefaultCollection=false)]
        public virtual string Path
        {
            get
            {
                return ((string)(base[global::Raspkate.Config.ModuleElement.PathPropertyName]));
            }
            set
            {
                base[global::Raspkate.Config.ModuleElement.PathPropertyName] = value;
            }
        }
        #endregion
        
        #region IsRelative Property
        /// <summary>
        /// The XML name of the <see cref="IsRelative"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string IsRelativePropertyName = "relative";
        
        /// <summary>
        /// Gets or sets the IsRelative.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The IsRelative.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Raspkate.Config.ModuleElement.IsRelativePropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false, DefaultValue=true)]
        public virtual bool IsRelative
        {
            get
            {
                return ((bool)(base[global::Raspkate.Config.ModuleElement.IsRelativePropertyName]));
            }
            set
            {
                base[global::Raspkate.Config.ModuleElement.IsRelativePropertyName] = value;
            }
        }
        #endregion
    }
}
namespace Raspkate.Config
{
    
    
    /// <summary>
    /// A collection of ModuleElement instances.
    /// </summary>
    [global::System.Configuration.ConfigurationCollectionAttribute(typeof(global::Raspkate.Config.ModuleElement), CollectionType=global::System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMapAlternate, AddItemName="add", RemoveItemName="remove", ClearItemsName="clear")]
    public partial class ModuleElementCollection : global::System.Configuration.ConfigurationElementCollection
    {
        
        #region Constants
        /// <summary>
        /// The XML name of the individual <see cref="global::Raspkate.Config.ModuleElement"/> instances in this collection.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string ModuleElementPropertyName = "module";
        #endregion
        
        #region Overrides
        /// <summary>
        /// Gets the type of the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <returns>The <see cref="global::System.Configuration.ConfigurationElementCollectionType"/> of this collection.</returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public override global::System.Configuration.ConfigurationElementCollectionType CollectionType
        {
            get
            {
                return global::System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMapAlternate;
            }
        }
        
        /// <summary>
        /// Gets the name used to identify this collection of elements
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        protected override string ElementName
        {
            get
            {
                return global::Raspkate.Config.ModuleElementCollection.ModuleElementPropertyName;
            }
        }
        
        /// <summary>
        /// Indicates whether the specified <see cref="global::System.Configuration.ConfigurationElement"/> exists in the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="elementName">The name of the element to verify.</param>
        /// <returns>
        /// <see langword="true"/> if the element exists in the collection; otherwise, <see langword="false"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        protected override bool IsElementName(string elementName)
        {
            return (elementName == global::Raspkate.Config.ModuleElementCollection.ModuleElementPropertyName);
        }
        
        /// <summary>
        /// Gets the element key for the specified configuration element.
        /// </summary>
        /// <param name="element">The <see cref="global::System.Configuration.ConfigurationElement"/> to return the key for.</param>
        /// <returns>
        /// An <see cref="object"/> that acts as the key for the specified <see cref="global::System.Configuration.ConfigurationElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        protected override object GetElementKey(global::System.Configuration.ConfigurationElement element)
        {
            return ((global::Raspkate.Config.ModuleElement)(element)).Path;
        }
        
        /// <summary>
        /// Creates a new <see cref="global::Raspkate.Config.ModuleElement"/>.
        /// </summary>
        /// <returns>
        /// A new <see cref="global::Raspkate.Config.ModuleElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        protected override global::System.Configuration.ConfigurationElement CreateNewElement()
        {
            return new global::Raspkate.Config.ModuleElement();
        }
        #endregion
        
        #region Indexer
        /// <summary>
        /// Gets the <see cref="global::Raspkate.Config.ModuleElement"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::Raspkate.Config.ModuleElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public global::Raspkate.Config.ModuleElement this[int index]
        {
            get
            {
                return ((global::Raspkate.Config.ModuleElement)(base.BaseGet(index)));
            }
        }
        
        /// <summary>
        /// Gets the <see cref="global::Raspkate.Config.ModuleElement"/> with the specified key.
        /// </summary>
        /// <param name="path">The key of the <see cref="global::Raspkate.Config.ModuleElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public global::Raspkate.Config.ModuleElement this[object path]
        {
            get
            {
                return ((global::Raspkate.Config.ModuleElement)(base.BaseGet(path)));
            }
        }
        #endregion
        
        #region Add
        /// <summary>
        /// Adds the specified <see cref="global::Raspkate.Config.ModuleElement"/> to the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="module">The <see cref="global::Raspkate.Config.ModuleElement"/> to add.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public void Add(global::Raspkate.Config.ModuleElement module)
        {
            base.BaseAdd(module);
        }
        #endregion
        
        #region Remove
        /// <summary>
        /// Removes the specified <see cref="global::Raspkate.Config.ModuleElement"/> from the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="module">The <see cref="global::Raspkate.Config.ModuleElement"/> to remove.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public void Remove(global::Raspkate.Config.ModuleElement module)
        {
            base.BaseRemove(this.GetElementKey(module));
        }
        #endregion
        
        #region GetItem
        /// <summary>
        /// Gets the <see cref="global::Raspkate.Config.ModuleElement"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::Raspkate.Config.ModuleElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public global::Raspkate.Config.ModuleElement GetItemAt(int index)
        {
            return ((global::Raspkate.Config.ModuleElement)(base.BaseGet(index)));
        }
        
        /// <summary>
        /// Gets the <see cref="global::Raspkate.Config.ModuleElement"/> with the specified key.
        /// </summary>
        /// <param name="path">The key of the <see cref="global::Raspkate.Config.ModuleElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public global::Raspkate.Config.ModuleElement GetItemByKey(string path)
        {
            return ((global::Raspkate.Config.ModuleElement)(base.BaseGet(((object)(path)))));
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
    }
}
