//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Raspkate.Config
{
    
    
    /// <summary>
    /// The RaspkateConfiguration Configuration Section.
    /// </summary>
    public partial class RaspkateConfiguration : global::System.Configuration.ConfigurationSection
    {
        
        #region Singleton Instance
        /// <summary>
        /// The XML name of the RaspkateConfiguration Configuration Section.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string RaspkateConfigurationSectionName = "raspkateConfiguration";
        
        /// <summary>
        /// The XML path of the RaspkateConfiguration Configuration Section.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string RaspkateConfigurationSectionPath = "raspkateConfiguration";
        
        /// <summary>
        /// Gets the RaspkateConfiguration instance.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public static global::Raspkate.Config.RaspkateConfiguration Instance
        {
            get
            {
                return ((global::Raspkate.Config.RaspkateConfiguration)(global::System.Configuration.ConfigurationManager.GetSection(global::Raspkate.Config.RaspkateConfiguration.RaspkateConfigurationSectionPath)));
            }
        }
        #endregion
        
        #region Xmlns Property
        /// <summary>
        /// The XML name of the <see cref="Xmlns"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string XmlnsPropertyName = "xmlns";
        
        /// <summary>
        /// Gets the XML namespace of this Configuration Section.
        /// </summary>
        /// <remarks>
        /// This property makes sure that if the configuration file contains the XML namespace,
        /// the parser doesn't throw an exception because it encounters the unknown "xmlns" attribute.
        /// </remarks>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Raspkate.Config.RaspkateConfiguration.XmlnsPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public string Xmlns
        {
            get
            {
                return ((string)(base[global::Raspkate.Config.RaspkateConfiguration.XmlnsPropertyName]));
            }
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Prefix Property
        /// <summary>
        /// The XML name of the <see cref="Prefix"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string PrefixPropertyName = "prefix";
        
        /// <summary>
        /// Gets or sets the Prefix.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The Prefix.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Raspkate.Config.RaspkateConfiguration.PrefixPropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public virtual string Prefix
        {
            get
            {
                return ((string)(base[global::Raspkate.Config.RaspkateConfiguration.PrefixPropertyName]));
            }
            set
            {
                base[global::Raspkate.Config.RaspkateConfiguration.PrefixPropertyName] = value;
            }
        }
        #endregion
        
        #region Handlers Property
        /// <summary>
        /// The XML name of the <see cref="Handlers"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string HandlersPropertyName = "handlers";
        
        /// <summary>
        /// Gets or sets the Handlers.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The Handlers.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Raspkate.Config.RaspkateConfiguration.HandlersPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::Raspkate.Config.HandlerElementCollection Handlers
        {
            get
            {
                return ((global::Raspkate.Config.HandlerElementCollection)(base[global::Raspkate.Config.RaspkateConfiguration.HandlersPropertyName]));
            }
            set
            {
                base[global::Raspkate.Config.RaspkateConfiguration.HandlersPropertyName] = value;
            }
        }
        #endregion
        
        #region Provisioning Property
        /// <summary>
        /// The XML name of the <see cref="Provisioning"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string ProvisioningPropertyName = "provisioning";
        
        /// <summary>
        /// Gets or sets the Provisioning.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The Provisioning.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Raspkate.Config.RaspkateConfiguration.ProvisioningPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::Raspkate.Config.ProvisioningElement Provisioning
        {
            get
            {
                return ((global::Raspkate.Config.ProvisioningElement)(base[global::Raspkate.Config.RaspkateConfiguration.ProvisioningPropertyName]));
            }
            set
            {
                base[global::Raspkate.Config.RaspkateConfiguration.ProvisioningPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace Raspkate.Config
{
    
    
    /// <summary>
    /// A collection of HandlerElement instances.
    /// </summary>
    [global::System.Configuration.ConfigurationCollectionAttribute(typeof(global::Raspkate.Config.HandlerElement), CollectionType=global::System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMapAlternate, AddItemName="add", RemoveItemName="remove", ClearItemsName="clear")]
    public partial class HandlerElementCollection : global::System.Configuration.ConfigurationElementCollection
    {
        
        #region Constants
        /// <summary>
        /// The XML name of the individual <see cref="global::Raspkate.Config.HandlerElement"/> instances in this collection.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string HandlerElementPropertyName = "handler";
        #endregion
        
        #region Overrides
        /// <summary>
        /// Gets the type of the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <returns>The <see cref="global::System.Configuration.ConfigurationElementCollectionType"/> of this collection.</returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public override global::System.Configuration.ConfigurationElementCollectionType CollectionType
        {
            get
            {
                return global::System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMapAlternate;
            }
        }
        
        /// <summary>
        /// Gets the name used to identify this collection of elements
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        protected override string ElementName
        {
            get
            {
                return global::Raspkate.Config.HandlerElementCollection.HandlerElementPropertyName;
            }
        }
        
        /// <summary>
        /// Indicates whether the specified <see cref="global::System.Configuration.ConfigurationElement"/> exists in the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="elementName">The name of the element to verify.</param>
        /// <returns>
        /// <see langword="true"/> if the element exists in the collection; otherwise, <see langword="false"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        protected override bool IsElementName(string elementName)
        {
            return (elementName == global::Raspkate.Config.HandlerElementCollection.HandlerElementPropertyName);
        }
        
        /// <summary>
        /// Gets the element key for the specified configuration element.
        /// </summary>
        /// <param name="element">The <see cref="global::System.Configuration.ConfigurationElement"/> to return the key for.</param>
        /// <returns>
        /// An <see cref="object"/> that acts as the key for the specified <see cref="global::System.Configuration.ConfigurationElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        protected override object GetElementKey(global::System.Configuration.ConfigurationElement element)
        {
            return ((global::Raspkate.Config.HandlerElement)(element)).Name;
        }
        
        /// <summary>
        /// Creates a new <see cref="global::Raspkate.Config.HandlerElement"/>.
        /// </summary>
        /// <returns>
        /// A new <see cref="global::Raspkate.Config.HandlerElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        protected override global::System.Configuration.ConfigurationElement CreateNewElement()
        {
            return new global::Raspkate.Config.HandlerElement();
        }
        #endregion
        
        #region Indexer
        /// <summary>
        /// Gets the <see cref="global::Raspkate.Config.HandlerElement"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::Raspkate.Config.HandlerElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public global::Raspkate.Config.HandlerElement this[int index]
        {
            get
            {
                return ((global::Raspkate.Config.HandlerElement)(base.BaseGet(index)));
            }
        }
        
        /// <summary>
        /// Gets the <see cref="global::Raspkate.Config.HandlerElement"/> with the specified key.
        /// </summary>
        /// <param name="name">The key of the <see cref="global::Raspkate.Config.HandlerElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public global::Raspkate.Config.HandlerElement this[object name]
        {
            get
            {
                return ((global::Raspkate.Config.HandlerElement)(base.BaseGet(name)));
            }
        }
        #endregion
        
        #region Add
        /// <summary>
        /// Adds the specified <see cref="global::Raspkate.Config.HandlerElement"/> to the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="handler">The <see cref="global::Raspkate.Config.HandlerElement"/> to add.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public void Add(global::Raspkate.Config.HandlerElement handler)
        {
            base.BaseAdd(handler);
        }
        #endregion
        
        #region Remove
        /// <summary>
        /// Removes the specified <see cref="global::Raspkate.Config.HandlerElement"/> from the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="handler">The <see cref="global::Raspkate.Config.HandlerElement"/> to remove.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public void Remove(global::Raspkate.Config.HandlerElement handler)
        {
            base.BaseRemove(this.GetElementKey(handler));
        }
        #endregion
        
        #region GetItem
        /// <summary>
        /// Gets the <see cref="global::Raspkate.Config.HandlerElement"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::Raspkate.Config.HandlerElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public global::Raspkate.Config.HandlerElement GetItemAt(int index)
        {
            return ((global::Raspkate.Config.HandlerElement)(base.BaseGet(index)));
        }
        
        /// <summary>
        /// Gets the <see cref="global::Raspkate.Config.HandlerElement"/> with the specified key.
        /// </summary>
        /// <param name="name">The key of the <see cref="global::Raspkate.Config.HandlerElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public global::Raspkate.Config.HandlerElement GetItemByKey(string name)
        {
            return ((global::Raspkate.Config.HandlerElement)(base.BaseGet(((object)(name)))));
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
    }
}
namespace Raspkate.Config
{
    
    
    /// <summary>
    /// The HandlerElement Configuration Element.
    /// </summary>
    public partial class HandlerElement : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Type Property
        /// <summary>
        /// The XML name of the <see cref="Type"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string TypePropertyName = "type";
        
        /// <summary>
        /// Gets or sets the Type.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The Type.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Raspkate.Config.HandlerElement.TypePropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public virtual string Type
        {
            get
            {
                return ((string)(base[global::Raspkate.Config.HandlerElement.TypePropertyName]));
            }
            set
            {
                base[global::Raspkate.Config.HandlerElement.TypePropertyName] = value;
            }
        }
        #endregion
        
        #region Name Property
        /// <summary>
        /// The XML name of the <see cref="Name"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string NamePropertyName = "name";
        
        /// <summary>
        /// Gets or sets the Name.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The Name.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Raspkate.Config.HandlerElement.NamePropertyName, IsRequired=true, IsKey=true, IsDefaultCollection=false)]
        public virtual string Name
        {
            get
            {
                return ((string)(base[global::Raspkate.Config.HandlerElement.NamePropertyName]));
            }
            set
            {
                base[global::Raspkate.Config.HandlerElement.NamePropertyName] = value;
            }
        }
        #endregion
        
        #region HandlerProperties Property
        /// <summary>
        /// The XML name of the <see cref="HandlerProperties"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string HandlerPropertiesPropertyName = "properties";
        
        /// <summary>
        /// Gets or sets the HandlerProperties.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The HandlerProperties.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Raspkate.Config.HandlerElement.HandlerPropertiesPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::Raspkate.Config.HandlerPropertyElementCollection HandlerProperties
        {
            get
            {
                return ((global::Raspkate.Config.HandlerPropertyElementCollection)(base[global::Raspkate.Config.HandlerElement.HandlerPropertiesPropertyName]));
            }
            set
            {
                base[global::Raspkate.Config.HandlerElement.HandlerPropertiesPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace Raspkate.Config
{
    
    
    /// <summary>
    /// A collection of HandlerPropertyElement instances.
    /// </summary>
    [global::System.Configuration.ConfigurationCollectionAttribute(typeof(global::Raspkate.Config.HandlerPropertyElement), CollectionType=global::System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate, AddItemName=global::Raspkate.Config.HandlerPropertyElementCollection.HandlerPropertyElementPropertyName)]
    public partial class HandlerPropertyElementCollection : global::System.Configuration.ConfigurationElementCollection
    {
        
        #region Constants
        /// <summary>
        /// The XML name of the individual <see cref="global::Raspkate.Config.HandlerPropertyElement"/> instances in this collection.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string HandlerPropertyElementPropertyName = "property";
        #endregion
        
        #region Overrides
        /// <summary>
        /// Gets the type of the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <returns>The <see cref="global::System.Configuration.ConfigurationElementCollectionType"/> of this collection.</returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public override global::System.Configuration.ConfigurationElementCollectionType CollectionType
        {
            get
            {
                return global::System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate;
            }
        }
        
        /// <summary>
        /// Gets the name used to identify this collection of elements
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        protected override string ElementName
        {
            get
            {
                return global::Raspkate.Config.HandlerPropertyElementCollection.HandlerPropertyElementPropertyName;
            }
        }
        
        /// <summary>
        /// Indicates whether the specified <see cref="global::System.Configuration.ConfigurationElement"/> exists in the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="elementName">The name of the element to verify.</param>
        /// <returns>
        /// <see langword="true"/> if the element exists in the collection; otherwise, <see langword="false"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        protected override bool IsElementName(string elementName)
        {
            return (elementName == global::Raspkate.Config.HandlerPropertyElementCollection.HandlerPropertyElementPropertyName);
        }
        
        /// <summary>
        /// Gets the element key for the specified configuration element.
        /// </summary>
        /// <param name="element">The <see cref="global::System.Configuration.ConfigurationElement"/> to return the key for.</param>
        /// <returns>
        /// An <see cref="object"/> that acts as the key for the specified <see cref="global::System.Configuration.ConfigurationElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        protected override object GetElementKey(global::System.Configuration.ConfigurationElement element)
        {
            return ((global::Raspkate.Config.HandlerPropertyElement)(element)).Name;
        }
        
        /// <summary>
        /// Creates a new <see cref="global::Raspkate.Config.HandlerPropertyElement"/>.
        /// </summary>
        /// <returns>
        /// A new <see cref="global::Raspkate.Config.HandlerPropertyElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        protected override global::System.Configuration.ConfigurationElement CreateNewElement()
        {
            return new global::Raspkate.Config.HandlerPropertyElement();
        }
        #endregion
        
        #region Indexer
        /// <summary>
        /// Gets the <see cref="global::Raspkate.Config.HandlerPropertyElement"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::Raspkate.Config.HandlerPropertyElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public global::Raspkate.Config.HandlerPropertyElement this[int index]
        {
            get
            {
                return ((global::Raspkate.Config.HandlerPropertyElement)(base.BaseGet(index)));
            }
        }
        
        /// <summary>
        /// Gets the <see cref="global::Raspkate.Config.HandlerPropertyElement"/> with the specified key.
        /// </summary>
        /// <param name="name">The key of the <see cref="global::Raspkate.Config.HandlerPropertyElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public global::Raspkate.Config.HandlerPropertyElement this[object name]
        {
            get
            {
                return ((global::Raspkate.Config.HandlerPropertyElement)(base.BaseGet(name)));
            }
        }
        #endregion
        
        #region Add
        /// <summary>
        /// Adds the specified <see cref="global::Raspkate.Config.HandlerPropertyElement"/> to the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="property">The <see cref="global::Raspkate.Config.HandlerPropertyElement"/> to add.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public void Add(global::Raspkate.Config.HandlerPropertyElement property)
        {
            base.BaseAdd(property);
        }
        #endregion
        
        #region Remove
        /// <summary>
        /// Removes the specified <see cref="global::Raspkate.Config.HandlerPropertyElement"/> from the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="property">The <see cref="global::Raspkate.Config.HandlerPropertyElement"/> to remove.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public void Remove(global::Raspkate.Config.HandlerPropertyElement property)
        {
            base.BaseRemove(this.GetElementKey(property));
        }
        #endregion
        
        #region GetItem
        /// <summary>
        /// Gets the <see cref="global::Raspkate.Config.HandlerPropertyElement"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::Raspkate.Config.HandlerPropertyElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public global::Raspkate.Config.HandlerPropertyElement GetItemAt(int index)
        {
            return ((global::Raspkate.Config.HandlerPropertyElement)(base.BaseGet(index)));
        }
        
        /// <summary>
        /// Gets the <see cref="global::Raspkate.Config.HandlerPropertyElement"/> with the specified key.
        /// </summary>
        /// <param name="name">The key of the <see cref="global::Raspkate.Config.HandlerPropertyElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public global::Raspkate.Config.HandlerPropertyElement GetItemByKey(string name)
        {
            return ((global::Raspkate.Config.HandlerPropertyElement)(base.BaseGet(((object)(name)))));
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
    }
}
namespace Raspkate.Config
{
    
    
    /// <summary>
    /// The HandlerPropertyElement Configuration Element.
    /// </summary>
    public partial class HandlerPropertyElement : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Name Property
        /// <summary>
        /// The XML name of the <see cref="Name"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string NamePropertyName = "name";
        
        /// <summary>
        /// Gets or sets the Name.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The Name.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Raspkate.Config.HandlerPropertyElement.NamePropertyName, IsRequired=true, IsKey=true, IsDefaultCollection=false)]
        public virtual string Name
        {
            get
            {
                return ((string)(base[global::Raspkate.Config.HandlerPropertyElement.NamePropertyName]));
            }
            set
            {
                base[global::Raspkate.Config.HandlerPropertyElement.NamePropertyName] = value;
            }
        }
        #endregion
        
        #region Value Property
        /// <summary>
        /// The XML name of the <see cref="Value"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string ValuePropertyName = "value";
        
        /// <summary>
        /// Gets or sets the Value.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The Value.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Raspkate.Config.HandlerPropertyElement.ValuePropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual string Value
        {
            get
            {
                return ((string)(base[global::Raspkate.Config.HandlerPropertyElement.ValuePropertyName]));
            }
            set
            {
                base[global::Raspkate.Config.HandlerPropertyElement.ValuePropertyName] = value;
            }
        }
        #endregion
    }
}
namespace Raspkate.Config
{
    
    
    /// <summary>
    /// The ProvisioningElement Configuration Element.
    /// </summary>
    public partial class ProvisioningElement : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Enabled Property
        /// <summary>
        /// The XML name of the <see cref="Enabled"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string EnabledPropertyName = "enabled";
        
        /// <summary>
        /// Gets or sets the Enabled.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The Enabled.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Raspkate.Config.ProvisioningElement.EnabledPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual bool Enabled
        {
            get
            {
                return ((bool)(base[global::Raspkate.Config.ProvisioningElement.EnabledPropertyName]));
            }
            set
            {
                base[global::Raspkate.Config.ProvisioningElement.EnabledPropertyName] = value;
            }
        }
        #endregion
        
        #region SearchPath Property
        /// <summary>
        /// The XML name of the <see cref="SearchPath"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string SearchPathPropertyName = "searchPath";
        
        /// <summary>
        /// Gets or sets the SearchPath.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The SearchPath.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Raspkate.Config.ProvisioningElement.SearchPathPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual string SearchPath
        {
            get
            {
                return ((string)(base[global::Raspkate.Config.ProvisioningElement.SearchPathPropertyName]));
            }
            set
            {
                base[global::Raspkate.Config.ProvisioningElement.SearchPathPropertyName] = value;
            }
        }
        #endregion
    }
}
